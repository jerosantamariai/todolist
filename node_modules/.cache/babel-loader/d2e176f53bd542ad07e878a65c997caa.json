{"ast":null,"code":"var _jsxFileName = \"/Users/jerosantamariai/Desktop/Jero/4Geeks/Day 19/todolist/src/components/todolist.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ToDoItem from \"./todoitem\";\n\nconst ToDoList = props => {\n  //devuelvo el array q mapeo para trabajar (la lista)\n  return React.createElement(\"div\", {\n    className: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.todos.length > 0 ? props.todos.map((todo, i) => {\n    return React.createElement(ToDoItem, {\n      todo: todo,\n      key: i,\n      handleClickTrash: props.handleClickTrash,\n      completeToDo: props.completeToDo,\n      pos: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }) : React.createElement(\"a\", {\n    href: \"/#\",\n    className: \"list-group-item list-group-item-action text-center disable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Lista de Tareas Vacia \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), \"Por favor crear lista antes de agregar una tarea \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Solo si la lista fue eliminada\")));\n};\n\nToDoList.propTypes = {\n  todos: PropTypes.array.isRequired,\n  handleClickTrash: PropTypes.func.isRequired\n};\nexport default ToDoList;","map":{"version":3,"sources":["/Users/jerosantamariai/Desktop/Jero/4Geeks/Day 19/todolist/src/components/todolist.js"],"names":["React","PropTypes","ToDoItem","ToDoList","props","todos","length","map","todo","i","handleClickTrash","completeToDo","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB;AACA,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,KAAK,CAACC,KAAN,CAAYC,MAAZ,GAAqB,CAArB,GACIF,KAAK,CAACC,KAAN,CAAYE,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAa;AACzB,WACI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAED,IADV;AAEI,MAAA,GAAG,EAAEC,CAFT;AAGI,MAAA,gBAAgB,EAAEL,KAAK,CAACM,gBAH5B;AAII,MAAA,YAAY,EAAEN,KAAK,CAACO,YAJxB;AAKI,MAAA,GAAG,EAAEF,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH,GAVD,CADJ,GAaQ;AAAG,IAAA,IAAI,EAAC,IAAR;AACI,IAAA,SAAS,EAAC,4DADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAE0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF1B,uDAGqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHrD,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAJJ,CAfhB,CADJ;AA0BH,CA5BD;;AA8BAN,QAAQ,CAACS,SAAT,GAAqB;AACjBP,EAAAA,KAAK,EAAEJ,SAAS,CAACY,KAAV,CAAgBC,UADN;AAEjBJ,EAAAA,gBAAgB,EAAET,SAAS,CAACc,IAAV,CAAeD;AAFhB,CAArB;AAKA,eAAeX,QAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ToDoItem from \"./todoitem\";\n\nconst ToDoList = props => {\n    //devuelvo el array q mapeo para trabajar (la lista)\n    return (\n        <div className=\"list-group\">\n            {\n                props.todos.length > 0 ?\n                    props.todos.map((todo, i) => {\n                        return (\n                            <ToDoItem\n                                todo={todo}\n                                key={i}\n                                handleClickTrash={props.handleClickTrash}\n                                completeToDo={props.completeToDo}\n                                pos={i}\n                            />\n                        )\n                    })\n                    : (\n                        <a href=\"/#\"\n                            className=\"list-group-item list-group-item-action text-center disable\">\n                            Lista de Tareas Vacia <br />\n                            Por favor crear lista antes de agregar una tarea <br />\n                            <small>Solo si la lista fue eliminada</small>\n                        </a>\n                    )\n            }\n        </div>\n    )\n}\n\nToDoList.propTypes = {\n    todos: PropTypes.array.isRequired,\n    handleClickTrash: PropTypes.func.isRequired\n}\n\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}
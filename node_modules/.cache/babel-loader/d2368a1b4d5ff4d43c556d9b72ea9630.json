{"ast":null,"code":"var _jsxFileName = \"/Users/jerosantamariai/Desktop/Jero/4Geeks/Day 19/todolist/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ToDoList from './components/todolist';\nimport ToDoForm from './components/todoform';\n\nfunction App() {\n  const apiURL = \"https://assets.breatheco.de/apis/fake/todos/user/jerosantamariai\";\n  const [error, setError] = useState(null);\n  const [result, setResult] = useState(null);\n  const [done, setDone] = useState(false);\n  const [todos, setTodo] = useState([{\n    label: 'Cras justo odio',\n    done: false\n  }, {\n    label: 'Dapibus ac facilisis in',\n    done: false\n  }, {\n    label: 'Morbi leo risus',\n    done: true\n  }, {\n    label: 'Porta ac consectetur ac',\n    done: false\n  }, {\n    label: 'Vestibulum at eros',\n    done: true\n  }]);\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 13 && e.target.value !== \"\") {\n      //si se hace enter o es distinto de vacio se ejecuta la tarea\n      setTodo([...todos, {\n        label: e.target.value,\n        done: done !== '' ? done : false\n      }]); //agrega una tarea con lo q agregue en label y la opxion del done\n\n      e.target.value = \"\"; //despues limpio el input para poder escribir de nuevo y por eso se deja en false\n\n      setDone(false);\n    }\n  };\n\n  const handleChange = e => {\n    //si selecciono una opcion en select, se vuelve true\n    if (e.target.value === \"\") {\n      setDone(false);\n    }\n\n    if (e.target.value === \"false\") {\n      setDone(false);\n    }\n\n    if (e.target.value === \"true\") {\n      setDone(true);\n    }\n  };\n\n  const handleClickTrash = pos => {\n    // console.log(\"eliminando la posicion: \" + pos);\n    let todos = todos.splice(pos, 1); // en esa posicion eliminar 1 elemento\n\n    setTodo([...todos]);\n  };\n\n  const getTodos = url => {\n    //recibe un url, hago la peticion fetch y si hay un error manda el data\n    fetch(url).then(resp => resp.json()).then(data => {\n      if (data.msg) {\n        setError(data);\n      }\n\n      setTodo([...data]); //para q guarde en el arreglo la variable q viene por defeecto q se definio en const [todos]\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const createTodos = url => {\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify([]),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => resp.json()).then(data => {\n      if (data.msg) {\n        setError(data);\n      }\n\n      if (data.result) // si esta el resultado, hacer un setResult de la data\n        {\n          setResult(data);\n          setError(null); // para q no muestre el error de q no existe el usuario\n\n          getTodos(apiURL); //cargar denuevo la lista\n        }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const deleteTodos = url => {\n    //\n    fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => resp.json()).then(data => {\n      if (data.result) {\n        setResult(data);\n        setTodo([]); //cuando se hace click borra toda la lista\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const updateTodos = url => {\n    fetch(url, {\n      method: \"PUT\",\n      body: JSON.stringify(todos),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => resp.json()).then(data => {\n      if (data.msg) {\n        setError(data);\n      }\n\n      if (data.result) // si esta el resultado, hacer un setResult de la data\n        {\n          setResult(data);\n          setError(null); // para q no muestre el error de q no existe el usuario\n\n          getTodos(apiURL); //cargar denuevo la lista\n        }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    getTodos(apiURL);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-12 d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"ToDo List\"))), !!error && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    role: \"alert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, error.msg), !!result && React.createElement(\"div\", {\n    class: \"alert alert-success\",\n    role: \"alert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, result.result), React.createElement(\"div\", {\n    className: \"row pb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block btn-sm\",\n    onClick: () => createTodos(apiURL),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Crear Lista\")), React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-warning btn-block btn-sm\",\n    onClick: () => updateTodos(apiURL),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Guardar Lista\")), React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-danger btn-block btn-sm\",\n    onClick: () => deleteTodos(apiURL),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Borrar Lista\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(ToDoForm, {\n    handleChange: handleChange,\n    handleKeyDown: handleKeyDown,\n    done: done,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(ToDoList, {\n    todos: todos,\n    handleClickTrash: handleClickTrash,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jerosantamariai/Desktop/Jero/4Geeks/Day 19/todolist/src/App.js"],"names":["React","useState","useEffect","ToDoList","ToDoForm","App","apiURL","error","setError","result","setResult","done","setDone","todos","setTodo","label","handleKeyDown","e","keyCode","target","value","handleChange","handleClickTrash","pos","splice","getTodos","url","fetch","then","resp","json","data","msg","catch","console","log","createTodos","method","body","JSON","stringify","headers","deleteTodos","updateTodos"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ToDoList from './components/todolist';\nimport ToDoForm from './components/todoform';\nfunction App() {\n  const apiURL = \"https://assets.breatheco.de/apis/fake/todos/user/jerosantamariai\"\n  const [error, setError] = useState(null);\n  const [result, setResult] = useState(null);\n  const [done, setDone] = useState(false);\n  const [todos, setTodo] = useState([\n    { label: 'Cras justo odio', done: false },\n    { label: 'Dapibus ac facilisis in', done: false },\n    { label: 'Morbi leo risus', done: true },\n    { label: 'Porta ac consectetur ac', done: false },\n    { label: 'Vestibulum at eros', done: true },\n  ])\n  const handleKeyDown = e => {\n    if (e.keyCode === 13 && e.target.value !== \"\") { //si se hace enter o es distinto de vacio se ejecuta la tarea\n      setTodo([...todos, { label: e.target.value, done: done !== '' ? done : false }]); //agrega una tarea con lo q agregue en label y la opxion del done\n      e.target.value = \"\"; //despues limpio el input para poder escribir de nuevo y por eso se deja en false\n      setDone(false);   \n    }\n  }\n  const handleChange = e => { //si selecciono una opcion en select, se vuelve true\n    if (e.target.value === \"\") {\n      setDone(false)\n    }\n    if (e.target.value === \"false\") {\n      setDone(false)\n    }\n    if (e.target.value === \"true\") {\n      setDone(true)\n    }\n  }\n  const handleClickTrash = pos => {\n    // console.log(\"eliminando la posicion: \" + pos);\n    let todos = todos.splice(pos, 1); // en esa posicion eliminar 1 elemento\n    setTodo([...todos]);\n  }\n  const getTodos = url => { //recibe un url, hago la peticion fetch y si hay un error manda el data\n    fetch(url)\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.msg) {\n          setError(data);\n        }\n        setTodo([...data]) //para q guarde en el arreglo la variable q viene por defeecto q se definio en const [todos]\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n  const createTodos = url => {\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify([]),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.msg) {\n          setError(data);\n        }\n        if (data.result) // si esta el resultado, hacer un setResult de la data\n        {\n          setResult(data);\n          setError(null); // para q no muestre el error de q no existe el usuario\n          getTodos(apiURL); //cargar denuevo la lista\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n  const deleteTodos = url => { //\n    fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.result) {\n          setResult(data);\n          setTodo([]); //cuando se hace click borra toda la lista\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n  const updateTodos = url => {\n    fetch(url, {\n      method: \"PUT\",\n      body: JSON.stringify(todos),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.msg) {\n          setError(data);\n        }\n        if (data.result) // si esta el resultado, hacer un setResult de la data\n        {\n          setResult(data);\n          setError(null); // para q no muestre el error de q no existe el usuario\n          getTodos(apiURL); //cargar denuevo la lista\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n  useEffect(() => {\n    getTodos(apiURL);\n  }, [])\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12 d-flex justify-content-center\">\n            <h1>ToDo List</h1>\n          </div>\n        </div>\n        {\n          !!error &&\n          (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              {error.msg}\n            </div>\n          )\n        }\n        {\n          !!result &&\n          (\n            <div class=\"alert alert-success\" role=\"alert\">\n              {result.result}\n            </div>\n          )\n        }\n        <div className=\"row pb-2\">\n          <div className=\"col\">\n            <button\n              className=\"btn btn-primary btn-block btn-sm\"\n              onClick={() => createTodos(apiURL)}\n            >\n              Crear Lista\n            </button>\n          </div>\n          <div className=\"col\">\n            <button\n              className=\"btn btn-warning btn-block btn-sm\"\n              onClick={() => updateTodos(apiURL)}\n            >\n              Guardar Lista\n            </button>\n          </div>\n          <div className=\"col\">\n            <button\n              className=\"btn btn-danger btn-block btn-sm\"\n              onClick={() => deleteTodos(apiURL)}\n            >\n              Borrar Lista\n            </button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <ToDoForm handleChange={handleChange} handleKeyDown={handleKeyDown} done={done} />\n            <br />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <ToDoList todos={todos} handleClickTrash={handleClickTrash} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}